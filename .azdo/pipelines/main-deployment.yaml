trigger:
  branches:
    include:
    - main
    - feature/*
    - release/*

resources:
  repositories:
  - repository: ADO.Templates
    type: git
    name: 'Azure Landing Zones/ADO.Templates'
    ref: 'feature/timeout-fix'
  - repository: Terraform.LandingZones
    type: git
    name: 'Azure Landing Zones/Terraform.LandingZones'
  - repository: Terraform.RBAC
    type: git
    name: 'Azure Landing Zones/Terraform.RBAC'
  - repository: Terraform.ServiceConnections
    type: git
    name: 'Azure Landing Zones/Terraform.ServiceConnections'
  - repository: Terraform.AppRegistration
    type: git
    name: 'Azure Landing Zones/Terraform.AppRegistration'

parameters:
- name: useMicrosoftAgents
  displayName: Use Microsoft Hosted Agents (Greenfield)
  type: boolean
  default: false

stages:
### RUN CHECKS ###
- template: terraform/stages/terraform-checks.yaml@ADO.Templates
  parameters:
    usesRepositories: 
    - Terraform.LandingZones
    - Terraform.RBAC
    - Terraform.ServiceConnections
    - Terraform.AppRegistration
    pool:
      ${{ if eq(parameters.useMicrosoftAgents, true) }}:
        vmImage: 'ubuntu-latest' 
      ${{ else }}:
        name: 'Linux.AzureDevops.Ubuntu.2204.Prod'

### DEPLOY TO NPD ###
- template: ../templates/deploy-to-environment.yml
  parameters:
    platformEnvironment: 'Prod'
    appEnvironment: 'npd'
    usesRepositories: 
    - Terraform.LandingZones
    - Terraform.RBAC
    - Terraform.ServiceConnections
    - Terraform.AppRegistration
    dependsOn: RunChecks
    pool:
      ${{ if eq(parameters.useMicrosoftAgents, true) }}:
        vmImage: 'ubuntu-latest' 
      ${{ else }}:
        name: 'Linux.AzureDevops.Ubuntu.2204.Prod'

### DEPLOY TO PRD ###
- template: ../templates/deploy-to-environment.yml
  parameters:
    platformEnvironment: 'Prod'
    appEnvironment: 'prd'
    usesRepositories: 
    - Terraform.LandingZones
    - Terraform.RBAC
    - Terraform.ServiceConnections
    - Terraform.AppRegistration
    dependsOn: RunChecks
    pool:
      ${{ if eq(parameters.useMicrosoftAgents, true) }}:
        vmImage: 'ubuntu-latest' 
      ${{ else }}:
        name: 'Linux.AzureDevops.Ubuntu.2204.Prod'